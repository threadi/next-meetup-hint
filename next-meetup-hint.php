<?php
/**
 * Plugin Name:       Next Meetup Hint
 * Description:       Show hint for next meetup.
 * Requires at least: 4.9.24
 * Requires PHP:      8.0
 * Version:           @@VersionNumber@@
 * Author:            Thomas Zwirner
 * Author URI:        https://www.thomaszwirner.de
 * License:           GPL-2.0-or-later
 * License URI:       https://www.gnu.org/licenses/gpl-2.0.html
 * Text Domain:       next-meetup-hint
 *
 * @package next-meetup-hint
 */

declare(strict_types = 1);

// prevent direct access.
defined( 'ABSPATH' ) || exit;

// do nothing if PHP-version is not 8.0 or newer.
if ( PHP_VERSION_ID < 80000 ) { // @phpstan-ignore smaller.alwaysFalse
	return;
}

use NextMeetupHint\Dependencies\easySettingsForWordPress\Fields\MultiSelect;
use NextMeetupHint\Dependencies\easySettingsForWordPress\Fields\Number;
use NextMeetupHint\Dependencies\easySettingsForWordPress\Settings;

// get autoloader generated by composer.
require_once __DIR__ . '/vendor/autoload.php';

/**
 * Initialize this plugin in backend: load the events and get the event within the next configured days.
 *
 * @return void
 */
function next_meetup_hint_init(): void {
	// get the actual user id.
	$user_id = get_current_user_id();

	// bail if next meetup hint is not allowed for this user.
	if ( ! next_meetup_hint_is_user_allowed( $user_id ) ) {
		return;
	}

	// bail if actual user has disabled the hint in its settings.
	if ( 1 === (int) get_user_meta( $user_id, 'hide_next_meet_hint', true ) ) {
		return;
	}

	// bail if user has hidden the hint for 2 days and if the days are not gone.
	$message_hidden = absint( get_user_meta( $user_id, 'hide_next_meetup_hint_for_2_days', true ) );
	if ( $message_hidden > 0 && $message_hidden >= ( time() - ( (int) get_option( 'nmh_hide_days', 2 ) * 86400 ) ) ) {
		return;
	}

	// embed the required object file for events from WordPress.
	require_once ABSPATH . 'wp-admin/includes/class-wp-community-events.php'; // @phpstan-ignore requireOnce.fileNotFound

	// get the location the user has configured.
	$saved_location = get_user_option( 'community-events-location', $user_id );

	// get the event object with data of the user.
	$events_client = new WP_Community_Events( $user_id, $saved_location );

	// get the list of events for this user.
	$events = $events_client->get_events();

	// bail if no events have been found.
	if ( empty( $events ) ) {
		return;
	}

	// bail if it is a wp error.
	if ( is_wp_error( $events ) ) {
		return;
	}

	// bail if no event list is found.
	if ( empty( $events['events'] ) ) {
		return;
	}

	// get the days from user settings.
	$days = absint( get_user_meta( $user_id, 'next_meet_hint_days', true ) );
	if ( 0 === $days ) {
		// if no setting is given, use 14 days.
		$days = absint( get_option( 'nmh_days_before', 14 ) );
	}

	// marker for next date.
	$next_date = false;

	// check if next date is in given days.
	foreach ( $events['events'] as $event ) {
		// bail if no date given.
		if ( empty( $event['date'] ) ) {
			continue;
		}

		// will the event take place in the next days depending on setting?
		if ( ! $next_date && strtotime( $event['date'] ) < ( time() + ( $days * 86400 ) ) ) {
			$next_date = $event;
		}
	}

	// if next date has been found, add it to the configuration which triggers the hint.
	if ( $next_date ) {
		set_transient( 'next_meetup_hint', $next_date );
	}
}
add_action( 'admin_init', 'next_meetup_hint_init' );

/**
 * Show hint for next meetup.
 *
 * @return void
 */
function next_meetup_hint_notice(): void {
	// get the user id.
	$user_id = get_current_user_id();

	// bail if actual user has disabled the hint in its settings.
	if ( 1 === absint( get_user_meta( $user_id, 'hide_next_meet_hint', true ) ) ) {
		return;
	}

	// bail if user has hidden the hint for 2 days and if the days are not gone.
	$message_hidden = absint( get_user_meta( $user_id, 'hide_next_meetup_hint_for_2_days', true ) );
	if ( $message_hidden > 0 && $message_hidden >= ( time() - ( (int) get_option( 'nmh_hide_days', 2 ) * 86400 ) ) ) {
		return;
	}

	// get the saved event from transient.
	$event = get_transient( 'next_meetup_hint' );

	// bail if no event is saved.
	if ( ! $event ) {
		return;
	}

	// output the template.
	require_once next_meetup_hint_get_template( 'event.php' );

	// delete the trigger.
	delete_transient( 'next_meetup_hint' );
}
add_action( 'admin_notices', 'next_meetup_hint_notice' );

/**
 * Add fields in user edit profil where he can configure the hint.
 *
 * @param WP_User $user The user object.
 *
 * @return void
 */
function next_meetup_user_profile_fields( WP_User $user ): void {
	// bail if user is not allowed to user next meetup hint.
	if ( ! next_meetup_hint_is_user_allowed( $user->ID ) ) {
		return;
	}

	// get the settings.
	$hide_next_meet_hint              = absint( get_user_meta( $user->ID, 'hide_next_meet_hint', true ) );
	$next_meet_hint_days              = absint( get_user_meta( $user->ID, 'next_meet_hint_days', true ) );
	$hide_next_meetup_hint_for_2_days = absint( get_user_meta( $user->ID, 'hide_next_meetup_hint_for_2_days', true ) );

	// get dashboard URL.
	$dashboard_url = add_query_arg(
		array(),
		get_admin_url() . 'index.php'
	);

	// output.
	?>
		<h3 id="nextmeetuphint"><?php echo esc_html__( 'Next Meetup Hint', 'next-meetup-hint' ); ?></h3>
		<p>
		<?php
			/* translators: %1$s will be replaced by a URL. */
			echo wp_kses_post( sprintf( __( 'Change your location on the widget "WordPress Events and News" on the <a href="%1$s">Dashboard</a>.', 'next-meetup-hint' ), esc_url( $dashboard_url ) ) );
		?>
		</p>
		<table class="form-table">
			<tr>
				<th><label for="hide_next_meet_hint"><?php echo esc_html__( 'Hide next meetup hint', 'next-meetup-hint' ); ?></label></th>
				<td>
					<input type="checkbox" name="hide_next_meet_hint" id="hide_next_meet_hint" value="1"<?php echo ( 1 === $hide_next_meet_hint ? ' checked="checked"' : '' ); ?> />
					<p><?php echo esc_html__( 'This will disable any hint for next meetups for you.', 'next-meetup-hint' ); ?></p>
				</td>
			</tr>
			<tr>
				<th><label for="next_meet_hint_days"><?php echo esc_html__( 'Show hint days before the event', 'next-meetup-hint' ); ?></label></th>
				<td>
					<input type="number" name="next_meet_hint_days" id="next_meet_hint_days" value="<?php echo absint( $next_meet_hint_days ); ?>" />
					<p>
					<?php
						/* translators: %1$d will be replaced by a number of days. */
						echo wp_kses_post( sprintf( __( 'If set to 0 the global setting of %1$d days is used.', 'next-meetup-hint' ), (int) get_option( 'nmh_days_before', 14 ) ) );
					?>
					</p>
				</td>
			</tr>
			<tr>
				<th><label><?php echo esc_html__( 'Is the hint hidden?', 'next-meetup-hint' ); ?></label></th>
				<td>
					<?php
					if ( 1 === $hide_next_meet_hint ) {
						echo esc_html__( 'Yes, generally hidden', 'next-meetup-hint' );
					} elseif ( $hide_next_meetup_hint_for_2_days > 0 && $hide_next_meetup_hint_for_2_days >= ( time() - ( 2 * 86400 ) ) ) {
						// create url.
						$url = add_query_arg(
							array(
								'action' => 'next_meet_hint_remove_lock',
								'nonce'  => wp_create_nonce( 'next-meet-hint-remove-lock' ),
							),
							get_admin_url() . 'admin.php'
						);

						/* translators: %1$s will be replaced by a date. */
						echo esc_html( sprintf( __( 'Yes, until %1$s', 'next-meetup-hint' ), date_i18n( get_option( 'date_format' ) . ' ' . get_option( 'time_format' ), $hide_next_meetup_hint_for_2_days ) ) );

						// show link to remove the lock.
						echo ' <a href="' . esc_url( $url ) . '">' . esc_html__( 'show them again', 'next-meetup-hint' ) . '</a>';
					} else {
						echo esc_html__( 'No, it is visible.', 'next-meetup-hint' );
					}
					?>
				</td>
			</tr>
		</table>
	<?php
}
add_action( 'show_user_profile', 'next_meetup_user_profile_fields' );

/**
 * Remove the user specific lock to show the event hint.
 *
 * @return void
 * @noinspection PhpNoReturnAttributeCanBeAddedInspection
 */
function next_meetup_user_remove_lock(): void {
	// check nonce.
	check_admin_referer( 'next-meet-hint-remove-lock', 'nonce' );

	// remove the lock.
	delete_user_meta( get_current_user_id(), 'hide_next_meetup_hint_for_2_days' );

	// get the referer.
	$referer = wp_get_referer();

	// if no referer could be loaded, just get an empty string.
	if ( ! $referer ) {
		$referer = '';
	}

	// forward user.
	wp_safe_redirect( $referer );
	exit;
}
add_action( 'admin_action_next_meet_hint_remove_lock', 'next_meetup_user_remove_lock' );

/**
 * Save fields in user edit profil where he can configure the hint.
 *
 * @param int $user_id The user ID.
 *
 * @return void
 */
function next_meetup_save_user_profile_fields( int $user_id ): void {
	// bail if user is not allowed to edit this data.
	if ( ! current_user_can( 'edit_user', $user_id ) ) {
		return;
	}

	// get value from form.
	$hide_next_meet_hint = absint( filter_input( INPUT_POST, 'hide_next_meet_hint', FILTER_SANITIZE_NUMBER_INT ) );

	// save the hide setting.
	if ( $hide_next_meet_hint > 0 ) {
		update_user_meta( $user_id, 'hide_next_meet_hint', $hide_next_meet_hint );
	} else {
		delete_user_meta( $user_id, 'hide_next_meet_hint' );
	}

	// get value from form.
	$next_meet_hint_days = absint( filter_input( INPUT_POST, 'next_meet_hint_days', FILTER_SANITIZE_NUMBER_INT ) );

	// save the days setting.
	update_user_meta( $user_id, 'next_meet_hint_days', $next_meet_hint_days );
}
add_action( 'personal_options_update', 'next_meetup_save_user_profile_fields' );
add_action( 'edit_user_profile_update', 'next_meetup_save_user_profile_fields' );

/**
 * Add our own styles and JS.
 *
 * @return void
 */
function next_meetup_add_styles_and_js(): void {
	// add our own CSS.
	wp_enqueue_style(
		'next-meetup-hint',
		trailingslashit( plugin_dir_url( __FILE__ ) ) . 'styles.css',
		array(),
		(string) filemtime( trailingslashit( plugin_dir_path( __FILE__ ) ) . 'styles.css' ),
	);

	// add our own JS.
	wp_enqueue_script(
		'next-meetup-hint',
		trailingslashit( plugin_dir_url( __FILE__ ) ) . 'scripts.js',
		array( 'jquery' ),
		(string) filemtime( trailingslashit( plugin_dir_path( __FILE__ ) ) . 'scripts.js' ),
		true
	);

	// add php-vars to our js-script.
	wp_localize_script(
		'next-meetup-hint',
		'nextMeetupHintJsVars',
		array(
			'ajax_url'      => admin_url( 'admin-ajax.php' ),
			'dismiss_nonce' => wp_create_nonce( 'next-meetup-hint-hide-hint' ),
			'review_url'    => 'https://wordpress.org/support/plugin/next-meetup-hint/reviews/#new-post',
			'title_rate_us' => __( 'Rate us', 'next-meetup-hint' ),
		)
	);
}
add_action( 'admin_enqueue_scripts', 'next_meetup_add_styles_and_js' );

/**
 * Hide hint via AJAX for 2 days.
 *
 * @return void
 */
function next_meetup_hint_hide_via_ajax(): void {
	// check nonce.
	check_ajax_referer( 'next-meetup-hint-hide-hint', 'nonce' );

	// save setting.
	update_user_meta( get_current_user_id(), 'hide_next_meetup_hint_for_2_days', time() );

	// return empty result.
	wp_send_json_success();
}
add_action( 'wp_ajax_next_meetup_hint_dismiss_admin_notice', 'next_meetup_hint_hide_via_ajax' );

/**
 * Return path to the requested template.
 *
 * @param string $template The file name of the template.
 *
 * @return string
 */
function next_meetup_hint_get_template( string $template ): string {
	// check if requested template exist in theme.
	$theme_template = locate_template( trailingslashit( basename( __DIR__ ) ) . $template );
	if ( $theme_template ) {
		return $theme_template;
	}

	// set the directory for template to use.
	$directory = basename( __DIR__ );

	/**
	 * Set template directory.
	 *
	 * Defaults to our own plugin-directory.
	 *
	 * @since 2.0.0 Available since 2.0.0.
	 *
	 * @param string $directory The directory to use.
	 */
	$plugin_template = plugin_dir_path( apply_filters( 'next_meetup_hint_set_template_directory', $directory ) ) . 'templates/' . $template;
	if ( file_exists( $plugin_template ) ) {
		return $plugin_template;
	}

	// return template of the plugin.
	return plugin_dir_path( __FILE__ ) . 'templates/' . $template;
}

/**
 * Add link to go to the user-specific settings in plugin list.
 *
 * @param array<int,string> $links List of links for this plugin in plugin list.
 *
 * @return array<int,string>
 */
function next_meetup_hint_add_plugin_link( array $links ): array {
	// add the link.
	$links[] = '<a href="' . esc_url( get_edit_profile_url() ) . '#nextmeetuphint">' . __( 'Configure your settings', 'next-meetup-hint' ) . '</a>';

	// return resulting link list.
	return $links;
}
add_filter( 'plugin_action_links_' . plugin_basename( __FILE__ ), 'next_meetup_hint_add_plugin_link', 20 );

/**
 * Add settings for this plugin.
 *
 * @return void
 */
function next_meetup_hint_add_settings(): void {
	global $wp_roles;

	// bail if no roles could be loaded.
	if ( ! $wp_roles instanceof WP_Roles ) {
		return;
	}

	// get list of roles.
	$roles = array();
	foreach ( $wp_roles->roles as $name => $role ) {
		// add this role to the list.
		$roles[ $name ] = $role['name'];
	}

	// get list of users.
	$users = array();
	foreach ( get_users() as $user ) {
		// add this user to the list.
		$users[ $user->ID ] = $user->display_name;
	}

	/**
	 * Configure the basic settings object.
	 */
	$settings_obj = Settings::get_instance();
	$settings_obj->set_slug( 'next-meetup-hint' );
	$settings_obj->set_plugin_slug( 'next-meetup-hint/next-meetup-hint.php' );
	$settings_obj->set_menu_title( __( 'Next Meetup Hint settings', 'next-meetup-hint' ) );
	$settings_obj->set_title( __( 'Settings for Next Meetup Hint', 'next-meetup-hint' ) );
	$settings_obj->set_menu_slug( 'next-meetup-hint' );
	$settings_obj->show_settings_link_in_plugin_list( true );

	/**
	 * Configure the tab for the settings.
	 */
	$general_tab = $settings_obj->add_tab( 'nmh_general' );
	$general_tab->set_title( __( 'General Settings', 'next-meetup-hint' ) );
	$settings_obj->set_default_tab( $general_tab );

	$permissions_tab = $settings_obj->add_tab( 'nmh_permissions' );
	$permissions_tab->set_title( __( 'Permissions', 'next-meetup-hint' ) );

	/**
	 * Configure all sections for this settings object.
	 */
	// add general settings section.
	$general_tab_general_section = $general_tab->add_section( 'settings_section_general' );
	$general_tab_general_section->set_title( __( 'General Settings', 'next-meetup-hint' ) );
	$general_tab_general_section->set_setting( $settings_obj );

	// add permissions settings section.
	$permissions_tab_general_section = $permissions_tab->add_section( 'settings_section_permissions' );
	$permissions_tab_general_section->set_title( __( 'Permissions', 'next-meetup-hint' ) );
	$permissions_tab_general_section->set_setting( $settings_obj );

	/**
	 * Configure settings for this plugin.
	 */
	// set global days before the hint should be shown.
	$setting = $settings_obj->add_setting( 'nmh_days_before' );
	$setting->set_section( $general_tab_general_section );
	$setting->set_type( 'integer' );
	$setting->set_default( 14 );
	$setting->set_show_in_rest( false );
	$field = new Number();
	$field->set_title( __( 'Days before the meetup', 'next-meetup-hint' ) );
	$field->set_description( __( 'Set number of days before the meetup to show the hint.', 'next-meetup-hint' ) );
	$field->set_min( 1 );
	$field->set_max( 365 );
	$field->set_step( 1 );
	$setting->set_field( $field );

	// set global days to hide hint.
	$setting = $settings_obj->add_setting( 'nmh_hide_days' );
	$setting->set_section( $general_tab_general_section );
	$setting->set_type( 'integer' );
	$setting->set_default( 2 );
	$setting->set_show_in_rest( false );
	$field = new Number();
	$field->set_title( __( 'Hide hint', 'next-meetup-hint' ) );
	$field->set_description( __( 'Set number of days the hint would be hidden if user use the option to "Dismiss" the notice.', 'next-meetup-hint' ) );
	$field->set_min( 0 );
	$field->set_max( 365 );
	$field->set_step( 1 );
	$setting->set_field( $field );

	// set option to enable GoogleMaps link.
	$setting = $settings_obj->add_setting( 'nmh_google_maps' );
	$setting->set_section( $general_tab_general_section );
	$setting->set_type( 'boolean' );
	$setting->set_default( true );
	$setting->set_show_in_rest( false );
	$setting->set_field(
		array(
			'type'        => 'Checkbox',
			'title'       => __( 'Show GoogleMaps link', 'next-meetup-hint' ),
			'description' => __( 'If activated, a link to GoogleMaps is displayed for each event, provided that geo-coordinates are available for the event. This allows you to quickly see where the Meetup is taking place and find your way there.', 'next-meetup-hint' ),
		)
	);

	// set option to enable OpenStreetMap link.
	$setting = $settings_obj->add_setting( 'nmh_openstreet_map' );
	$setting->set_section( $general_tab_general_section );
	$setting->set_type( 'boolean' );
	$setting->set_default( true );
	$setting->set_show_in_rest( false );
	$setting->set_field(
		array(
			'type'        => 'Checkbox',
			'title'       => __( 'Show OpenStreetMap link', 'next-meetup-hint' ),
			'description' => __( 'If activated, a link to OpenStreetMap is displayed for each event, provided that geo-coordinates are available for the event. This allows you to quickly see where the Meetup is taking place and find your way there.', 'next-meetup-hint' ),
		)
	);

	// set option to enable BingMaps.
	$setting = $settings_obj->add_setting( 'nmh_bing_maps' );
	$setting->set_section( $general_tab_general_section );
	$setting->set_type( 'boolean' );
	$setting->set_default( true );
	$setting->set_show_in_rest( false );
	$setting->set_field(
		array(
			'type'        => 'Checkbox',
			'title'       => __( 'Show BingMaps link', 'next-meetup-hint' ),
			'description' => __( 'If activated, a link to BingMaps is displayed for each event, provided that geo-coordinates are available for the event. This allows you to quickly see where the Meetup is taking place and find your way there.', 'next-meetup-hint' ),
		)
	);

	// select roles which could use next meetup hint.
	$setting = $settings_obj->add_setting( 'nmh_roles' );
	$setting->set_section( $permissions_tab_general_section );
	$setting->set_type( 'array' );
	$setting->set_default( $roles );
	$setting->set_show_in_rest( false );
	$field = new MultiSelect();
	$field->set_title( __( 'Roles', 'next-meetup-hint' ) );
	$field->set_description( __( 'Select roles that should use and see the Next Meetup hint.', 'play-audio-once' ) );
	$field->set_options( $roles );
	$setting->set_field( $field );

	// select users which should NOT use next meetup hint.
	$setting = $settings_obj->add_setting( 'nmh_hide_users' );
	$setting->set_section( $permissions_tab_general_section );
	$setting->set_type( 'array' );
	$setting->set_show_in_rest( false );
	$field = new MultiSelect();
	$field->set_title( __( 'Users', 'next-meetup-hint' ) );
	$field->set_description( __( 'Select users which should NOT use and see the Next Meetup hint.', 'play-audio-once' ) );
	$field->set_options( $users );
	$setting->set_field( $field );

	// initialize this settings object.
	$settings_obj->init();
}
add_action( 'init', 'next_meetup_hint_add_settings' );

/**
 * Return whether next meetup hint is allowed for user.
 *
 * @param int $user_id The user to check.
 *
 * @return bool
 */
function next_meetup_hint_is_user_allowed( int $user_id ): bool {
	// bail if user is in list to hide the next meetup hint.
	if ( in_array( (string) $user_id, get_option( 'nmh_hide_users', array() ), true ) ) {
		return false;
	}

	// get the user object.
	$user_obj = wp_get_current_user();

	// bail if no user could be loaded.
	if ( ! $user_obj instanceof WP_User ) { // @phpstan-ignore instanceof.alwaysTrue
		return false;
	}

	// get user roles.
	$user_roles = $user_obj->roles;

	// bail if user has role which is not in list of allowed roles.
	$hide          = true;
	$allowed_roles = get_option( 'nmh_roles', array() );
	foreach ( $user_roles as $role ) {
		if ( in_array( $role, $allowed_roles, true ) ) {
			$hide = false;
		}
	}
	if ( $hide ) {
		return false;
	}

	// return true if user can see and use next meetup hint.
	return true;
}

/**
 * Add links in row meta.
 *
 * @param array<string> $links List of links.
 * @param string        $file The requested plugin file name.
 *
 * @return array<string>
 */
function play_audio_once_add_row_meta_links( array $links, string $file ): array {
	// bail if this is not our plugin.
	if ( __FILE__ !== WP_PLUGIN_DIR . DIRECTORY_SEPARATOR . $file ) {
		return $links;
	}

	// add our custom links.
	$row_meta = array(
		'support' => '<a href="https://wordpress.org/support/plugin/next-meetup-hint/" target="_blank" title="' . esc_attr__( 'Support Forum', 'next-meetup-hint' ) . '">' . esc_html__( 'Support Forum', 'next-meetup-hint' ) . '</a>',
	);

	// return the resulting list of links.
	return array_merge( $links, $row_meta );
}
add_filter( 'plugin_row_meta', 'play_audio_once_add_row_meta_links', 10, 2 );

/**
 * Show GoogleMap link on event.
 *
 * @param array<string,array<string>> $event The event data.
 *
 * @return void
 */
function next_meetup_hint_add_google_maps_link( array $event ): void {
	// bail if setting is not enabled.
	if ( 1 !== absint( get_option( 'nmh_google_maps' ) ) ) {
		return;
	}

	// bail if not lat and lon are available.
	if ( empty( $event['location']['latitude'] ) || empty( $event['location']['longitude'] ) ) {
		return;
	}

	// create the link.
	$url = 'https://maps.google.com/maps?z=12&t=m&q=loc:' . $event['location']['latitude'] . '+' . $event['location']['longitude'];

	// show the button.
	echo '<a href="' . esc_url( $url ) . '" target="_blank" class="button button-secondary">' . esc_html__( 'Show on Google Maps', 'next-meetup-hint' ) . '</a>';
}
add_action( 'next_meetup_hint_event_options', 'next_meetup_hint_add_google_maps_link' );

/**
 * Show OpenStreetMap link on event.
 *
 * @param array<string,array<string>> $event The event data.
 *
 * @return void
 */
function next_meetup_hint_add_openstreetmap_link( array $event ): void {
	// bail if setting is not enabled.
	if ( 1 !== absint( get_option( 'nmh_openstreet_map' ) ) ) {
		return;
	}

	// bail if not lat and lon are available.
	if ( empty( $event['location']['latitude'] ) || empty( $event['location']['longitude'] ) ) {
		return;
	}

	// create the link.
	$url = 'https://www.openstreetmap.org/?mlat=' . $event['location']['latitude'] . '&mlon=' . $event['location']['longitude'];

	// show the button.
	echo '<a href="' . esc_url( $url ) . '" target="_blank" class="button button-secondary">' . esc_html__( 'Show on OpenStreetMap', 'next-meetup-hint' ) . '</a>';
}
add_action( 'next_meetup_hint_event_options', 'next_meetup_hint_add_openstreetmap_link' );

/**
 * Show BingMap link on event.
 *
 * @param array<string,array<string>> $event The event data.
 *
 * @return void
 */
function next_meetup_hint_add_bingmap_link( array $event ): void {
	// bail if setting is not enabled.
	if ( 1 !== absint( get_option( 'nmh_bing_maps' ) ) ) {
		return;
	}

	// bail if not lat and lon are available.
	if ( empty( $event['location']['latitude'] ) || empty( $event['location']['longitude'] ) ) {
		return;
	}

	// create the link.
	$url = 'https://www.bing.com/maps/?cp=' . $event['location']['latitude'] . '%7E' . $event['location']['longitude'] . '&lvl=17.5';

	// show the button.
	echo '<a href="' . esc_url( $url ) . '" target="_blank" class="button button-secondary">' . esc_html__( 'Show on BingMap', 'next-meetup-hint' ) . '</a>';
}
add_action( 'next_meetup_hint_event_options', 'next_meetup_hint_add_bingmap_link' );

/**
 * Show settings link.
 *
 * @return void
 */
function next_meetup_hint_add_settings_link(): void {
	echo '<a href="' . esc_url( get_edit_profile_url() ) . '#nextmeetuphint" class="settings" title="' . esc_attr__( 'Go to your custom settings', 'next-meetup-hint' ) . '"><span class="dashicons dashicons-admin-generic"></span></a>';
}
add_action( 'next_meetup_hint_event_options', 'next_meetup_hint_add_settings_link', 10, 0 );

/**
 * Show a "why"-info with popup.
 *
 * @return void
 */
function next_meetup_hint_add_why(): void {
	echo '<a href="#nmhwhy" title="' . esc_attr__( 'Why do I see this hint?', 'next-meetup-hint' ) . '"><span class="dashicons dashicons-info"></span></a>';
	?>
	<div id="nmhwhy" class="overlay">
		<div class="popup">
			<h2><?php echo esc_html__( 'Why do I see this hint?', 'next-meetup-hint' ); ?></h2>
			<a class="close" href="#"><span class="dashicons dashicons-no"></span></a>
			<div class="content">
				<?php
				/* translators: %1$s will be replaced by a URL. */
				echo '<p>' . wp_kses_post( sprintf( __( 'This hint is displayed by the WordPress plugin <a href="%1$s" target="_blank">Next Meetup Hint (opens new window)</a>. It will show you the Meetup closest to you. The basis for the data is contained in WordPress itself and your WordPress user.', 'next-meetup-hint' ), 'https://wordpress.org/plugins/next-meetup-hint/' ) ) . '</p>';
				/* translators: %1$s will be replaced by a URL. */
				echo '<p>' . wp_kses_post( sprintf( __( 'You can disable these notifications <a href="%1$s">in your user profile</a>. There you can also specify the intervals at which you would like to see the notification for the Meetup.', 'next-meetup-hint' ), get_edit_profile_url() . '#nextmeetuphint' ) ) . '</p>';
				/* translators: %1$s will be replaced by a URL. */
				echo '<p>' . wp_kses_post( sprintf( __( 'If you have any further questions, please feel free to contact <a href="%1$s" target="_blank">our support forum (opens new window)</a>.', 'next-meetup-hint' ), 'https://wordpress.org/support/plugin/next-meetup-hint/' ) ) . '</p>';
				?>
			</div>
		</div>
	</div>
	<?php
}
add_action( 'next_meetup_hint_event_options', 'next_meetup_hint_add_why', 10, 0 );
